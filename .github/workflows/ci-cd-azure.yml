name: .NET CI/CD Pipeline

on:
  push:
    branches: [ master ]

env:
  DOTNET_VERSION: '9.0'
  AZURE_WEBAPP_NAME: 'bond-valuation-api'
  ACR_REGISTRY: 'bondvaluationassessment.azurecr.io'
  IMAGE_NAME: 'bond-valuation-service'
  RESOURCE_GROUP: 'BondValuationAssessment'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal

  build-and-push-to-acr:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and push to ACR
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Application/Dockerfile
        push: true
        tags: ${{ env.ACR_REGISTRY }}/samples/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy-to-azure:
    needs: build-and-push-to-acr
    runs-on: ubuntu-latest
    
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Configure App Service Settings
      run: |
        # Set the port configuration
        az webapp config appsettings set \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --settings WEBSITES_PORT=8080

    - name: Deploy to Azure App Service
      run: |
        az webapp config container set \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --container-image-name ${{ env.ACR_REGISTRY }}/samples/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Restart App Service
      run: |
        az webapp restart \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }}

    - name: Check deployment status
      run: |
        echo "Waiting for app to start..."
        sleep 30
        az webapp log tail \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --lines 50
      continue-on-error: true
